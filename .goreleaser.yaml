# yaml-language-server: $schema=https://goreleaser.com/static/schema.json

version: 2

project_name: telegram-owl

before:
  hooks:
    - go mod tidy

builds:
  - binary: telegram-owl
    main: ./cmd/telegram-owl
    goos:
      - windows
      - darwin
      - linux
      - freebsd
    goarch:
      - '386'
      - amd64
      - arm
      - arm64
    ignore:
      - goos: darwin
        goarch: 386
      - goos: freebsd
        goarch: arm
    goarm:
      - 7
    env:
      - CGO_ENABLED=0
    mod_timestamp: '{{ .CommitTimestamp }}'
    flags:
      - -trimpath
    ldflags:
      - -s -w -X github.com/beeyev/telegram-owl/internal/version.version={{.Version}}


archives:
  - formats: [tar.gz]
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_v{{ .Version }}_
      {{- if eq .Os "darwin" }}macOS
      {{- else }}{{ title .Os }}{{ end }}_
      {{- if eq .Arch "amd64" }}64bit
      {{- else if eq .Arch "386" }}32bit
      {{- else if eq .Arch "arm" }}ARM
      {{- else if eq .Arch "arm64" }}ARM64
      {{- else }}{{ .Arch }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        formats: [ 'zip' ]
    files:
      - README.md
      - LICENSE

checksum:
  name_template: "telegram-owl_v{{.Version}}_checksums.txt"

changelog:
  use: github-native
  sort: asc

upx:
  - enabled: true
    goos:
      - linux
      - windows
    compress: best
    lzma: true
    brute: false

report_sizes: true

scoops:
  - # Name of the recipe
    #
    # Default: the project name.
    # Templates: allowed.
    name: telegram-owl

    # Git author used to commit to the repository.
    # Templates: allowed.
    commit_author:
      name: goreleaserbot
      email: bot@goreleaser.com

    # The project name and current git tag are used in the format string.
    #
    # Templates: allowed.
    commit_msg_template: "Scoop update for {{ .ProjectName }} version {{ .Tag }}"

    # Your app's homepage.
    #
    # Templates: allowed.
    # Default: inferred from global metadata.
    homepage: "https://github.com/beeyev/telegram-owl"

    # Your app's description.
    #
    # Templates: allowed.
    # Default: inferred from global metadata.
    description: "CLI utility to send messages and files to Telegram chats and channels"

    # Your app's license
    #
    # Default: inferred from global metadata.
    license: MIT

    # Setting this will prevent goreleaser to actually try to commit the updated
    # manifest leaving the responsibility of publishing it to the user.
    # If set to auto, the release will not be uploaded to the scoop bucket
    # in case there is an indicator for prerelease in the tag e.g. v1.0.0-rc1
    #
    # Templates: allowed.
    #skip_upload: true


    # A two-dimensional array of string, specifies the shortcut values to make available in the startmenu.
    # The array has to contain an executable/label pair. The third and fourth element are optional.
    #shortcuts: [["drumroll.exe", "drumroll"]]

    # GOAMD64 to specify which amd64 version to use if there are multiple versions
    # from the build section.
    #
    # Default: 'v1'.
    #goamd64: v3

    # Repository to push the generated files to.
#    repository:
#      # Repository owner.
#      #
#      # Templates: allowed.
#      owner: beeyev
#
#      # Repository name.
#      #
#      # Templates: allowed.
#      name: telegram-owl
#
#      # Sets up pull request creation instead of just pushing to the given branch.
#      # Make sure the 'branch' property is different from base before enabling
#      # it.
#      #
#      # This might require a personal access token.
#      pull_request:
#        # Whether to enable it or not.
#        enabled: true
